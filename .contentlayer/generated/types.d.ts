// NOTE This file is auto-generated by Contentlayer

import type { Markdown, MDX, ImageFieldData } from 'contentlayer/core'
import * as Local from 'contentlayer/source-files'

export { isType } from 'contentlayer/client'

// export type Image = string
export type { Markdown, MDX }

/** Document types */
export type Post = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Post'
  title: string
  date: string
  author: string
  description: string
  slug?: string | undefined
  id?: number | undefined
  image?: string | undefined
  draft: string
  tags?: Tag[] | undefined
  categories?: Categories[] | undefined
  /** Markdown file body */
  body: Markdown
  slug: string
}  

/** Nested types */
export type Categories = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Categories'
  title?: string | undefined

}

export type Tag = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Tag'
  title?: string | undefined

}  

/** Helper types */

export type AllTypes = DocumentTypes | NestedTypes
export type AllTypeNames = DocumentTypeNames | NestedTypeNames

export type DocumentTypes = Post
export type DocumentTypeNames = 'Post'

export type NestedTypes = Categories | Tag
export type NestedTypeNames = 'Categories' | 'Tag'


export interface ContentlayerGenTypes {
  documentTypes: DocumentTypes
  documentTypeMap: DocumentTypeMap
  documentTypeNames: DocumentTypeNames
  nestedTypes: NestedTypes
  nestedTypeMap: NestedTypeMap
  nestedTypeNames: NestedTypeNames
  allTypeNames: AllTypeNames
}

declare global {
  interface ContentlayerGen extends ContentlayerGenTypes {}
}

export type DocumentTypeMap = {
  Post: Post
}

export type NestedTypeMap = {
  Categories: Categories
  Tag: Tag
}

 