{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import { defineDocumentType, makeSource, defineNestedType} from \"contentlayer/source-files\";\n\n\n\nconst Tag = defineNestedType(() => ({\n  name: 'Tag',\n  fields: {\n    title: { type: 'string'},\n  },\n}))\n\n\nconst Images = defineNestedType(() => ({\n  name: 'Images',\n  fields: {\n    title: { type: 'string', required: true },\n  },\n}))\n\nconst Categories = defineNestedType(() => ({\n  name: 'Categories',\n  fields: {\n    title: { type: 'string' },\n  },\n}))\n\nconst Post = defineDocumentType(() => ({\n    name: 'Post',\n    filePathPattern: `**/*.md`,\n    contentType: 'markdown',\n    fields: {\n      title: {\n        type: 'string',required: true,\n      },\n      date: {\n        type: 'date',\n        required: true,\n      },\n      author:{\n        type: 'string',\n        required: true,\n\n      },\n     \n      description:{\n        type: 'string',\n        required: true,\n\n      },\n      image:{\n        type: 'string',\n        required: true,\n      },\n      draft:{\n        type: 'string',\n        required: true,\n      },\n    \n      summary:{\n        type: 'string',\n        required: true,\n      },\n      tags: {\n        type: 'list',of: Tag,\n      },\n      images: {\n        type: 'list',of: Images,\n      },\n      categories:{\n        type: 'list',of: Categories,\n      }\n\n    },\n    computedFields: {\n      slug: {\n        type: \"string\",\n        resolve: (doc) => doc._raw.sourceFileName.replace(/\\.md/, \"\"),\n      },\n    }\n  \n  }))\n  \nexport default makeSource({\n    contentDirPath: 'posts',\n    documentTypes: [Post],\n})"],
  "mappings": ";AAAA;AAIA,IAAM,MAAM,iBAAiB,MAAO;AAAA,EAClC,MAAM;AAAA,EACN,QAAQ;AAAA,IACN,OAAO,EAAE,MAAM,SAAQ;AAAA,EACzB;AACF,EAAE;AAGF,IAAM,SAAS,iBAAiB,MAAO;AAAA,EACrC,MAAM;AAAA,EACN,QAAQ;AAAA,IACN,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,EAC1C;AACF,EAAE;AAEF,IAAM,aAAa,iBAAiB,MAAO;AAAA,EACzC,MAAM;AAAA,EACN,QAAQ;AAAA,IACN,OAAO,EAAE,MAAM,SAAS;AAAA,EAC1B;AACF,EAAE;AAEF,IAAM,OAAO,mBAAmB,MAAO;AAAA,EACnC,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO;AAAA,MACL,MAAM;AAAA,MAAS,UAAU;AAAA,IAC3B;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,QAAO;AAAA,MACL,MAAM;AAAA,MACN,UAAU;AAAA,IAEZ;AAAA,IAEA,aAAY;AAAA,MACV,MAAM;AAAA,MACN,UAAU;AAAA,IAEZ;AAAA,IACA,OAAM;AAAA,MACJ,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,OAAM;AAAA,MACJ,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IAEA,SAAQ;AAAA,MACN,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MAAO,IAAI;AAAA,IACnB;AAAA,IACA,QAAQ;AAAA,MACN,MAAM;AAAA,MAAO,IAAI;AAAA,IACnB;AAAA,IACA,YAAW;AAAA,MACT,MAAM;AAAA,MAAO,IAAI;AAAA,IACnB;AAAA,EAEF;AAAA,EACA,gBAAgB;AAAA,IACd,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,IAAI,KAAK,eAAe,QAAQ,QAAQ,EAAE;AAAA,IAC9D;AAAA,EACF;AAEF,EAAE;AAEJ,IAAO,8BAAQ,WAAW;AAAA,EACtB,gBAAgB;AAAA,EAChB,eAAe,CAAC,IAAI;AACxB,CAAC;",
  "names": []
}
